name: Build and Distribute

on:
  push:
    branches:
      - main

jobs:
  build:
    name: build
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v2

      - uses: subosito/flutter-action@v1
        with:
          flutter-version: '3.27.3'
    
      - name: Setup Flutter Environment
        run: |
          flutter clean
          flutter pub get 
      
      # 清除 Xcode 缓存
      - name: Clean Xcode Cache
        run: |
          rm -rf ~/Library/Developer/Xcode/DerivedData
          rm -rf ~/Library/Developer/Xcode/iOS\ DeviceSupport
          rm -rf ~/Library/Developer/Xcode/Archives
          rm -rf ~/Library/Developer/Xcode/Products
          
      # 添加 Xcode 版本选择
      - name: Select Xcode 16.2
        run: sudo xcode-select -s /Applications/Xcode_16.2.app
        
      # 设置 CocoaPods
      # - name: Setup CocoaPods
      #   run: |
      #     cd ios
      #     rm -rf Pods
      #     rm -f Podfile.lock
      #     pod install --repo-update
          
      # 添加详细的环境信息调试步骤
      - name: Print Environment Info
        run: |
          echo "============= Environment Variables ============="
          echo "GITHUB_WORKSPACE: $GITHUB_WORKSPACE"
          FLUTTER_ROOT=$(which flutter | xargs dirname | xargs dirname)
          echo "FLUTTER_ROOT: $FLUTTER_ROOT"
          echo "FLUTTER_APPLICATION_PATH: $GITHUB_WORKSPACE"
          echo "Current Directory: $(pwd)"


      - uses: cedvdb/action-flutter-build-ios@v1
        with:
          build-cmd: |
            flutter build ipa --release --export-options-plist=ios/ExportOptions.plist --no-tree-shake-icons
          certificate-base64: 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


          certificate-password: 111111
          
          provisioning-profile-base64: 

          keychain-password: 111111

      # # 添加检查步骤
      - name: 检查构建文件
        run: |
          echo "检查 build/ios/ipa 目录内容："
          ls -la build/ios/ipa/
          echo "检查 build/ios 目录内容："
          ls -la build/ios/

      - name: Archive IPA
        uses: actions/upload-artifact@v4
        with:
          name: release-ipa
          path: build/ios/ipa


      - name: Upload to App Store using altool
        env:
          IPA_PATH: "build/ios/ipa/phuny.ipa"
          APPLE_ID: "jamesfine18@outlook.com"
          APP_SPECIFIC_PASSWORD: "cspq-ammc-jbqt-mloe"
        run: |
          xcrun altool --upload-app -f "$IPA_PATH" \
            -t ios \
            -u "$APPLE_ID" \
            -p "$APP_SPECIFIC_PASSWORD" \
            --verbose
